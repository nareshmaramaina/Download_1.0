!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
App_updates	Download_Application_Updates.c	/^int App_updates(int Total_Current_Device_Apps, int Total_Current_Server_Apps)$/;"	f	typeref:typename:int
Application_response_file	Application_request.c	/^char *Application_response_file="\/opt\/Application_response.xml";$/;"	v	typeref:typename:char *
Applications_Request_and_Response	Application_request.c	/^int Applications_Request_and_Response() $/;"	f	typeref:typename:int
Apply_Application_Patch	Apply_Application_Patch.c	/^int Apply_Application_Patch(float patch_toUpdate )$/;"	f	typeref:typename:int
Apply_Firmware_Patch	Apply_Firmware_patch.c	/^int Apply_Firmware_Patch(float patch_toUpdate )$/;"	f	typeref:typename:int
CC	makefile	/^CC= arm-none-linux-gnueabi-gcc -Wall $/;"	m
CFLAGS	makefile	/^CFLAGS=-Wall  -I ..\/include$/;"	m
Check_internet_by_hostname	Wait_for_internet.c	/^int Check_internet_by_hostname(char *host)$/;"	f	typeref:typename:int
Download_Application_Updates	Download_Application_Updates.c	/^int Download_Application_Updates(void)$/;"	f	typeref:typename:int
Download_Firmware_Updates	Download_Firmware_Updates.c	/^int Download_Firmware_Updates(void)$/;"	f	typeref:typename:int
Download_applications	Download_Application_Updates.c	/^int Download_applications(int Update_count,struct RHMSApplication DownloadApplication[Update_cou/;"	f	typeref:typename:int
Download_firmwares	Download_Firmware_Updates.c	/^int Download_firmwares(int Update_count,struct RHMSFirmware DownloadFirmware[Update_count])$/;"	f	typeref:typename:int
Firm_Apps_Download_lock	main.c	/^int Firm_Apps_Download_lock()$/;"	f	typeref:typename:int
Firmware_And_Apps_Downloader	makefile	/^Firmware_And_Apps_Downloader:main.c Application_request.c  firm_apps_response_parser.c  Firmware/;"	t
Firmware_Request_and_Response	Firmware_request.c	/^int Firmware_Request_and_Response() $/;"	f	typeref:typename:int
Firmware_response_file	Firmware_request.c	/^char *Firmware_response_file="\/opt\/Firmware_response.xml";$/;"	v	typeref:typename:char *
Firmware_updates	Download_Firmware_Updates.c	/^int Firmware_updates( int Total_Current_Server_Apps)$/;"	f	typeref:typename:int
Get_SerialID	Get_SerialID.c	/^int Get_SerialID(char *SerialID)$/;"	f	typeref:typename:int
Get_SerialID	requests.c	/^int Get_SerialID(char *SerialID)$/;"	f	typeref:typename:int
Get_Server_And_Device_Applications_Count	Download_Application_Updates.c	/^int Get_Server_And_Device_Applications_Count(int *Total_Device_apps,int *Total_Server_apps)$/;"	f	typeref:typename:int
Get_Server_Firmwares_Count	Download_Firmware_Updates.c	/^int Get_Server_Firmwares_Count()$/;"	f	typeref:typename:int
Get_format_machineid	Get_SerialID.c	/^int Get_format_machineid(char *format_machineid)$/;"	f	typeref:typename:int
Get_format_machineid	requests.c	/^int Get_format_machineid(char *format_machineid)$/;"	f	typeref:typename:int
Name	Download_Application_Updates.c	/^	char Name[128];$/;"	m	struct:POSApplication	typeref:typename:char[128]	file:
Name	Download_Application_Updates.c	/^	char Name[128];$/;"	m	struct:RHMSApplication	typeref:typename:char[128]	file:
POSApplication	Download_Application_Updates.c	/^struct POSApplication $/;"	s	file:
Parse_Application_response_xml	firm_apps_response_parser.c	/^int Parse_Application_response_xml(void)$/;"	f	typeref:typename:int
Parse_Firmware_response_xml	firm_apps_response_parser.c	/^int Parse_Firmware_response_xml(void)$/;"	f	typeref:typename:int
RHMSApplication	Download_Application_Updates.c	/^struct RHMSApplication$/;"	s	file:
RHMSFirmware	Download_Firmware_Updates.c	/^struct RHMSFirmware$/;"	s	file:
Send_Update_singal_to_app	Send_Update_singal_to_app.c	/^void Send_Update_singal_to_app()$/;"	f	typeref:typename:void
SerialID	Get_SerialID.c	/^char SerialID[24];$/;"	v	typeref:typename:char[24]
SerialID	requests.c	/^char SerialID[24];$/;"	v	typeref:typename:char[24]
Server_Addr	Update_Configured_Server_Addr.c	/^char Server_Addr[512]="https:\/\/rhms2.callippus.co.uk";$/;"	v	typeref:typename:char[512]
Type	Download_Application_Updates.c	/^	char Type[128];$/;"	m	struct:POSApplication	typeref:typename:char[128]	file:
Type	Download_Application_Updates.c	/^	char Type[128];$/;"	m	struct:RHMSApplication	typeref:typename:char[128]	file:
UC	Get_SerialID.c	/^	typedef unsigned char UC;$/;"	t	function:get_macid	typeref:typename:unsigned char	file:
UC	requests.c	/^	typedef unsigned char UC;$/;"	t	function:get_macid	typeref:typename:unsigned char	file:
URL	Download_Application_Updates.c	/^	char URL[512];$/;"	m	struct:RHMSApplication	typeref:typename:char[512]	file:
URL	Download_Firmware_Updates.c	/^	char URL[512];$/;"	m	struct:RHMSFirmware	typeref:typename:char[512]	file:
Update_Configured_Server_Addr	Update_Configured_Server_Addr.c	/^int  Update_Configured_Server_Addr()$/;"	f	typeref:typename:int
Update_buff	update_script.c	/^char *Update_buff="#!\/bin\/bash\\nExtracted_path=\/mnt\/sysuser\/Firmware-Upgrade\/Extract\/\\n/;"	v	typeref:typename:char *
Update_script	update_script.c	/^int Update_script()$/;"	f	typeref:typename:int
Version	Download_Application_Updates.c	/^	float Version;$/;"	m	struct:POSApplication	typeref:typename:float	file:
Version	Download_Application_Updates.c	/^	float Version;$/;"	m	struct:RHMSApplication	typeref:typename:float	file:
Version	Download_Firmware_Updates.c	/^	float Version;$/;"	m	struct:RHMSFirmware	typeref:typename:float	file:
Wait_for_internet	Wait_for_internet.c	/^void Wait_for_internet(void)$/;"	f	typeref:typename:void
bin_strip	makefile	/^bin_strip=arm-none-linux-gnueabi-strip$/;"	m
clean	makefile	/^clean:$/;"	t
get_macid	Get_SerialID.c	/^int get_macid(char *macid)$/;"	f	typeref:typename:int
get_macid	requests.c	/^int get_macid(char *macid)$/;"	f	typeref:typename:int
libs	makefile	/^libs=-L ..\/lib -lxml2 -lz$/;"	m
main	main.c	/^int main()$/;"	f	typeref:typename:int
parseStory	firm_apps_response_parser.c	/^int parseStory (xmlDocPtr doc, xmlNodePtr cur,char *output_file)$/;"	f	typeref:typename:int
retrieve_nw_details	Wait_for_internet.c	/^static int retrieve_nw_details(void)$/;"	f	typeref:typename:int	file:
wget_download	wget.c	/^int wget_download (char *url,char *filename) \/\/ Mode= Active or Passive, retry_count =retry co/;"	f	typeref:typename:int
